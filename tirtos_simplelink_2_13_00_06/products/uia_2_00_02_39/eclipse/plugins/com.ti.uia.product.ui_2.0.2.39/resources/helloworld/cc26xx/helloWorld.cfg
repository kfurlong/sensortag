/*
 * Copyright (c) 2014, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * */

/*
 *  ======== helloWorld.cfg ========
 */
/* ================ BIOS Configuration ================ */
var BIOS = xdc.useModule('ti.sysbios.BIOS');

/*
 *  Build a custom BIOS library.
 *
 *  Since this program does not have any BIOS tasks, we remove Task
 *  from the configuration.  In order to do this, though, we cannot
 *  use the default instrumented BIOS library, so we use the custom
 *  library, which is smaller than the pre-built "instrumented" (default)
 *  and "non-instrumented" libraries.
 */
BIOS.libType = BIOS.LibType_Custom;
BIOS.taskEnabled = false;

var LoggingSetup = xdc.useModule('ti.uia.sysbios.LoggingSetup');

/* Make sure that only the Hello World event is logged. */
LoggingSetup.sysbiosTaskLogging = false;


var Boot = xdc.useModule('ti.sysbios.family.arm.cc26xx.Boot');

/*
 *  Set 'customerConfig' to cause the Boot module to provide a default
 *  customer configuration structure.  This default structure is good to get
 *  simple kernel apps to run, but more advanced apps may provide a customized
 *  configuration structure and should set this parameter to 'false'.
 */
Boot.customerConfig = true;

/*
 *  Link with the driverlib provided within the kernel release.  Set this to 'false'
 *  to link with a different driverlib.
 */
Boot.provideDriverlib = true;

/*
 *  Use the M3 NVIC SysTick Timer for timestamps, instead of the default RTC
 *  timer.  The 32KHz RTC timer is too coarse for timestamps needed by System
 *  Analyzer.
 */
var Timestamp = xdc.useModule('xdc.runtime.Timestamp');
Timestamp.SupportProxy = xdc.useModule('ti.sysbios.family.arm.m3.TimestampProvider');
