var Events = xdc.useModule("TestEvents");
var Log = xdc.useModule('xdc.runtime.Log');
var LoggerStreamer2 = xdc.useModule('ti.uia.sysbios.LoggerStreamer2');
var Diags = xdc.useModule("xdc.runtime.Diags");
var Memory = xdc.useModule('xdc.runtime.Memory')
var SysMin = xdc.useModule('xdc.runtime.SysMin');
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');
var ILogger = xdc.useModule('xdc.runtime.ILogger');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Idle = xdc.useModule('ti.sysbios.knl.Idle');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
var UIAPacket = xdc.useModule('ti.uia.runtime.UIAPacket');

BIOS.libType = BIOS.LibType_NonInstrumented;
BIOS.assertsEnabled = false;
BIOS.logsEnabled = false;

/*
 * Program.argSize sets the size of the .args section.
 * The examples don't use command line args so argSize is set to 0.
 */
Program.argSize = 0x0;
Program.stack = 1024;

/* Circular buffer size for System_printf() */
SysMin.bufSize = 0x400;

/* Create the required tasks. */
var tskParams = new Task.Params;
tskParams.instance.name = "tsk0";
tskParams.arg0 = 1;
tskParams.arg1 = 2;
tskParams.priority = 1;
tskParams.vitalTaskFlag = false;
tskParams.stackSize = 1024;
Program.global.tsk0 = Task.create('&tsk0Fxn', tskParams);
Program.global.tsk1 = Task.create('&tsk1Fxn', tskParams);

LoggerStreamer2.isTimestampEnabled = false;
LoggerStreamer2.supportLoggerDisable = true;

var loggerParams = new LoggerStreamer2.Params();

if (Program.build.target.bitsPerChar / 8 == 2) {
        loggerParams.bufSize = 64;
}
else {
        loggerParams.bufSize = 128;
}

/*
 *  only used for writeMemoryRange API.  Prevent triggering .xs check for
 *  small buffer sizes
 */
loggerParams.maxEventSize = 0;

loggerParams.primeFxn = '&prime';
loggerParams.exchangeFxn = '&exchange';
loggerParams.context = 0;

Program.global.logger0 = LoggerStreamer2.create(loggerParams);
Program.global.logger0.instance.name = "Logger 0";

loggerParams.context = 1;
Program.global.logger1 = LoggerStreamer2.create(loggerParams);
Program.global.logger1.instance.name = "Logger 1";

var Main = xdc.useModule("xdc.runtime.Main");
var Defaults = xdc.useModule('xdc.runtime.Defaults');
Defaults.common$.logger = Program.global.logger0;

Main.common$.diags_ENTRY = Diags.RUNTIME_ON;
Main.common$.diags_USER1 = Diags.ALWAYS_ON;
Main.common$.diags_INFO = Diags.ALWAYS_ON;

System.SupportProxy = SysMin;
