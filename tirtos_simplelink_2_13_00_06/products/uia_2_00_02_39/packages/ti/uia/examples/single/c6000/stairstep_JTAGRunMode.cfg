/*
 * Copyright (c) 2012-2014, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * */

/*
 *  ======== stairstep_JTAGRunMode.cfg ========
 */
/* ================ XDC Configuration ================ */
/*
 *  Use xdc.runtime.SysMin for better performance.
 */
var System   = xdc.useModule('xdc.runtime.System');
var SysMin   = xdc.useModule('xdc.runtime.SysMin');
System.SupportProxy = SysMin;

Timestamp = xdc.useModule('xdc.runtime.Timestamp');
Log = xdc.useModule('xdc.runtime.Log');

/* ================ BIOS Configuration ================ */
BIOS = xdc.useModule('ti.sysbios.BIOS');
Clock = xdc.useModule('ti.sysbios.knl.Clock');
Swi = xdc.useModule('ti.sysbios.knl.Swi');
Task = xdc.useModule('ti.sysbios.knl.Task');
Timer = xdc.useModule('ti.sysbios.hal.Timer');
Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');

/*
 * Build a custom BIOS library.
 *
 * Enabling Swi and Hwi Load statistics requires a custom library. The
 * "instrumented" and "non-instrumented" libraries do not support Hwi or Swi
 * hooks, and the Load module uses hooks to gather the Hwi and Swi Load
 * statistics.
 *
 * The custom library will also be smaller than the pre-built "instrumented"
 * (default) and "non-instrumented" libraries.
 */
BIOS.libType = BIOS.LibType_Custom;

/*
 * Configure a Timer to interrupt every 100ms
 * timerFunc() provides Hwi load and posts a Swi and Semaphore
 * to provide Swi and Task loads.
 * And adjusts the loads every 5 seconds.
 */
var timerParams = new Timer.Params();
timerParams.startMode = Timer.StartMode_AUTO;
timerParams.period = 100000;        /* 100,000 uSecs = 100ms */
var timer0 = Timer.create(Timer.ANY, '&timerFunc', timerParams);

/*
 * Create Semaphore for Task thread to pend on
 */
Program.global.sem = Semaphore.create(0);

/*
 * Create Swi load thread
 */
Program.global.swi = Swi.create('&swiLoad');

/*
 * Create Task load thread
 */
var taskLoadTask = Task.create('&taskLoad');


/* ================ Board Specific ================ */
var Memory      = xdc.useModule('xdc.runtime.Memory');
Memory.defaultHeapSize = 0x10000;
Program.heap = 0x10000;

/* ================ Logger configuration ================ */
/*
 *  The target's Log records are read while the target is running. Note: this mode
 *  is only supported for CPUs that support real-time JTAG accesses such as
 *  those in the C6X family (e.g. C64X+ and C66 CPUs).
 *
 *  Configuration done by the application is still honored (e.g. setting
 *  up the common$.diags mask).
 *
 *  Please refer to the ti.uia.sysbios.LoggingSetup module for more
 *  details and configuration options.
 */
var LoggingSetup = xdc.useModule('ti.uia.sysbios.LoggingSetup');

/* Use LoggerRunMode with real-time JTAG upload */
LoggingSetup.loggerType = LoggingSetup.LoggerType_JTAGRUNMODE;

LoggingSetup.loadLoggerSize = 1024;
LoggingSetup.mainLoggerSize = 32768;
LoggingSetup.sysbiosLoggerSize = 32768;

/* Enable CPU Load logging */
LoggingSetup.loadLogging = true;

/*
 *  Enable Task, Swi, and Hwi Load logging. This allows the Idle Task
 *  usage to make more sense. Otherwise Hwi and Swi load is factored into
 *  each task's usage.
 */
LoggingSetup.loadTaskLogging = true;
LoggingSetup.loadSwiLogging = true;
LoggingSetup.loadHwiLogging = true;
