%%{
/*
 * Copyright (c) 2015, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
%%}
%%{
/*
 *  ======== Task.xdt ========
 */
%%}

%var BIOS = xdc.module("ti.sysbios.BIOS");
%var Core = xdc.module("ti.sysbios.hal.Core");
%if (BIOS.smpEnabled && (Core.numCores > 2)) {

#if defined(__ti__)
#pragma DATA_SECTION(ti_sysbios_knl_Task_Module_StateSmp_sortedRunQ,
    ".data:ti_sysbios_knl_Task_Module_StateSmp_sortedRunQ");
#elif defined(__IAR_SYSTEMS_ICC__)
#pragma location = ".data_ti_sysbios_knl_Task_Module_StateSmp_sortedRunQ"
#elif defined(__GNUC__) && !defined(__ti__)
ti_sysbios_knl_Queue_Object
    ti_sysbios_knl_Task_Module_StateSmp_sortedRunQ
    __attribute__ ((section(".data_ti_sysbios_knl_Task_Module_StateSmp_sortedRunQ")));
#else
#error "Unsupported compiler"
#endif

ti_sysbios_knl_Queue_Object ti_sysbios_knl_Task_Module_StateSmp_sortedRunQ;

#if defined(__ti__)
#pragma DATA_SECTION(ti_sysbios_knl_Task_Module_StateSmp_smpRunQ__A,
    ".data:ti_sysbios_knl_Task_Module_StateSmp_smpRunQ__A");
#elif defined(__IAR_SYSTEMS_ICC__)
#pragma location = ".data_ti_sysbios_knl_Task_Module_StateSmp_smpRunQ__A"
#elif defined(__GNUC__) && !defined(__ti__)
ti_sysbios_knl_Task_RunQEntry
    ti_sysbios_knl_Task_Module_StateSmp_smpRunQ__A[`Core.numCores`]
    __attribute__ ((section(".data_ti_sysbios_knl_Task_Module_StateSmp_smpRunQ__A")));
#else
#error "Unsupported compiler"
#endif

ti_sysbios_knl_Task_RunQEntry
    ti_sysbios_knl_Task_Module_StateSmp_smpRunQ__A[`Core.numCores`] = {
%for (var i = 0; i < Core.numCores; i++) {
    {
        { NULL, NULL },
        `i`,
        0
%   if (i != (Core.numCores - 1)) {
    },
%   }
%   else {
    }
%   }
%}
};

#if defined(__ti__)
#pragma DATA_SECTION(ti_sysbios_knl_Task_Module__stateSmp__V,
    ".data:ti_sysbios_knl_Task_Module__stateSmp__V");
#elif defined(__IAR_SYSTEMS_ICC__)
#pragma location = ".data_ti_sysbios_knl_Task_Module__stateSmp__V"
#elif defined(__GNUC__) && !defined(__ti__)
ti_sysbios_knl_Task_Module_StateSmp ti_sysbios_knl_Task_Module__stateSmp__V __attribute__ ((section(".data_ti_sysbios_knl_Task_Module__stateSmp__V")));
#else
#error "Unsupported compiler"
#endif

ti_sysbios_knl_Task_Module_StateSmp ti_sysbios_knl_Task_Module__stateSmp__V = {
    &ti_sysbios_knl_Task_Module_StateSmp_sortedRunQ,
    ti_sysbios_knl_Task_Module_StateSmp_smpRunQ__A
};
%}
