/*
 * Copyright (c) 2013, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 *  ======== package.bld ========
 *
 */

var objList = [
    "ff.c",
    "diskio.c",
    "ramdisk.c",
    "syncsysbios.c",
    "memsysbios.c"
];

var objListTI = [
    "ff.c",
    "diskio.c",
    "ramdisk.c",
    "syncsysbios.c",
    "memsysbios.c",
    "ffcio.c",		/* used to support TI's fopen(), etc. */
];

var profiles = [
    "release",
];

/*
 * this package builds the library using "release" profile and
 * currently cannot use common.bld because common.bld assumes
 * all ti targets libs are built with whole_program_debug profile
 */
for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];

    if (targ.$name.match(/ti/)) {
        for (var j = 0; j < profiles.length; j++) {
            var lib = Pkg.addLibrary('lib/' + profiles[j] + "/" + Pkg.name,
                   targ, {
                        profile: profiles[j],
                   });

            lib.addObjects(objListTI);
        }
    }
    else {
        for (var j = 0; j < profiles.length; j++) {
            var lib = Pkg.addLibrary('lib/' + profiles[j] + "/" + Pkg.name,
                   targ, {
                        profile: profiles[j],
                   });

            lib.addObjects(objList);
        }
    }
}

Pkg.otherFiles = [
    "package.xdc",
    "package.bld",
    "package.xs",
    "FatFS.xdc",
    "FatFS.xdt",
    "FatFS.xml",
    "Welcome.html",
    "ff.c",
    "diskio.c",
    "syncsysbios.c",
    "ffcio.c",
    "memsysbios.c",
    "ramdisk.c",
    "diskio.h",
    "ffconf.h",
    "ff.h",
    "ffcio.h",
    "integer.h",
];
 
/* include source files in the release package */
Pkg.attrs.exportSrc = true;
Pkg.attrs.exportCfg = true;

