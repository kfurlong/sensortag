%%{
/* 
 *  Copyright (c) 2015 Texas Instruments and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Texas Instruments - initial implementation
 * 
 * */

/* Linker templates are passed the following arguments:
 *      $out        - an open file stream for the generated linker
 *                    command file
 *      $args[]     - array of zero or more libraries that should be linked
 *                    with (in the order they appear in the argument list)
 *
 *  We can't add "'s around names; otherwise the GNU linker looks for names
 *  with "'s.
 *
 */
%%}
/*
 * This file was generated by linkcmd_gnu.xdt from the 
 * ti.platforms.simplelink package.
 */

__STACK_SIZE = `utils.toHex(prog.stack)`;
__TI_STACK_SIZE = __STACK_SIZE;

%if ($args.length > 0) {
INPUT(
    %for (var i = 0; i < $args.length; i++) {
    `$args[i]`
    %}
)
%}

/*
 * symbolic aliases for static instance objects
 */
%for (var sym in prog.symbol) {
    %var inst = prog.symbol[sym];
    %if (typeof(inst) == 'number') {
`sym` = `inst`;
    %}
    %else {
        %var objTab = inst.$module.$name.replace(/\./g, '_') + '_Object__table__V';
        %var off = prog.$capsule.instSize(inst) * inst.$index;
`sym` = `objTab` + `off`;
    %}
%}

%if (prog.platform.$orig.includeLinkCmdFile) {
%    var linkFile;
%    var platform = xdc.module('ti.platforms.simplelink.Platform');
%    if (platform.useGnuRomLinkCmd) {
%        linkFile = prog.platform.$package.packageBase + '/include_gnu/'
%        + prog.cpu.deviceName.toUpperCase() + '_rom.lds';
%    }
%    else {
%        linkFile = prog.platform.$package.packageBase + '/include_gnu/'
%        + prog.cpu.deviceName.toUpperCase() + '.lds';
%    }
INCLUDE "`linkFile`"
%}

SECTIONS {

%    var _utils = xdc.loadCapsule("gnu/targets/linkUtils.xs");
    `_utils.genSections(prog)`

    /*
     * Linker command file contributions from all loaded packages:
     */
    `_utils.genContributions($args)`

    __TI_STACK_BASE = __stack;
}

ENTRY(_c_int00)

/* function aliases */
%    for (var keys = this.$$aliases.keys(); keys.hasMoreElements(); ) {
%        var key = keys.nextElement();
`key` = `this.$$aliases.get(key)`;
%    }
%%{
/*
 * @(#) ti.platforms.simplelink; 1, 0, 0,; 4-24-2015 20:40:51; /db/ztree/library/trees/platform/platform-p07/src/
 */

%%}
