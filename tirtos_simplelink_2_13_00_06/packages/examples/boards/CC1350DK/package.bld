/*
 * Copyright (c) 2015, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== package.bld ========
 */

/* Library include paths are defined from config.bld */
if ((typeof(CC26xxWareDir) == undefined) || (CC26xxWareDir == "")) {
    throw("ERROR: NO VALID CC26xxWareDir PATH DEFINED!!!");
}

var coptsIncludePath = " -I" + CC26xxWareDir
var loptsDriverLibLinkerPath  = " -l" + CC26xxWareDir + "/bin/ccs/driverlib.lib";

var emptyArray = [
    {
      name: ['CC1350DK_empty'],
      config: ['empty'],
      copts: [coptsIncludePath + " -DPART_CC1310F128"],
      lopts: [loptsDriverLibLinkerPath + " CC1350DK.cmd -x"],
      sources: ['empty.c', 'Board.c'],
      buildPlatforms: ["ti.platforms.simplelink:CC1310F128"],
      nameList: ["em3"],
    },
    {
      name: ['CC1310DK_empty_min'],
      config: ['empty_min'],
      copts: [coptsIncludePath + " -DPART_CC1310F128"],
      lopts: [loptsDriverLibLinkerPath + " CC1350DK.cmd -x"],
      sources: ['empty_min.c', 'Board.c'],
      buildPlatforms: ["ti.platforms.simplelink:CC1310F128"],
      nameList: ["em3"],
    }
];

/* Test build */
var testBld = xdc.loadCapsule("ti/tirtos/build/test.bld");

Pkg.makePrologue = "vpath %.c $(subst ;,  ,$(XPKGPATH))\nvpath %.asm $(subst ;,  ,$(XPKGPATH))";

/* Generate the makefile goals. 'arguments' is XDCARGS */
arguments = ["profile=release", "platform=all"];

/* Build the empty examples */
testBld.buildTests(emptyArray, arguments);

Pkg.otherFiles = [
    "package.bld",
    "empty.c",
    "empty.cfg",
    "empty_min.c",
    "empty_min.cfg",
    "Board.c",
    "Board.h",
    "CC1350DK.cmd",
    "CC1350DK.icf",
    "CC1350DK.lds",
    "CC1350DK_ROM.lds",
];

/*
 *  Export everything necessary to build this package with (almost) no
 *  generated files.  This also exports subdirectories like 'golden'
 *  and 'docs'.
 */
Pkg.attrs.exportAll = true;
